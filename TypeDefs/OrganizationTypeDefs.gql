scalar Date

type Organization {
  _id: ID
  organizationName: String!
  abnDuns: Int
  organizationType: String!
  phoneNumber: Int
  organizationAddress: String
  organizationCountry: String!
  referenceId: String!
  adminFirstName: String!
  adminLastName: String!
  adminEmailAddress: String!
  adminMobileNumber: Int!
  adminPassword: String!
  userType: String
  createdAt: Date
  updatedAt: Date
  deletedAt: Date
}
input OrganizationInput {
  organizationName: String!
  abnDuns: Int
  organizationType: String!
  phoneNumber: Int
  organizationAddress: String
  organizationCountry: String!
  referenceId: String!
  adminFirstName: String!
  adminLastName: String!
  adminEmailAddress: String!
  adminMobileNumber: Int!
  adminPassword: String!
}
type Query {
  organizations: [Organization]!
  organization(id: ID!): Organization
}

type Mutation {
  createOrganization(input: OrganizationInput!): Organization!
  updateOrganization(id: ID!, input: OrganizationInput!): Organization!
  deleteOrganization(id: ID!): Organization!
  organizationLogin(
    email: String!
    password: String!
    mfaCode: String
  ): LoginUnion
}

union LoginUnion = Admin | Organization
